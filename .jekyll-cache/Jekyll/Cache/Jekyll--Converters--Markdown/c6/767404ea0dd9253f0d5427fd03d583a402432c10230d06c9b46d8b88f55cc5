I"!|<p><span style="font-size: 12pt;">- Git flow : luồng đi quản l&yacute; source code trong dự &aacute;n</span><br /><span style="font-size: 12pt;">- Branch : C&aacute;c nh&aacute;nh m&agrave; m&igrave;nh tạo ra (master,hotfix,release,Develop,feature)</span><br /><span style="font-size: 12pt;">- pull request (PR): tạo 1 y&ecirc;u cầu cho leader review code trước khi merge</span><br /><span style="font-size: 12pt;">- Review: xem code</span><br /><span style="font-size: 12pt;">- Merge : đẩy code v&agrave;o kho</span><br /><span style="font-size: 12pt;">- Release (staging) :m&ocirc;i trường cho kh </span><br /><span style="font-size: 12pt;">- c&aacute;c lệnh thao t&aacute;c vs git như thao t&aacute;c tr&ecirc;n lilux (cd/mkdir/rm/rm -Rf/vi/pwd)</span></p>
<p><span style="font-size: 12pt;">------------------------Repository------------------</span><br /><span style="font-size: 12pt;">Lệnh cấu h&igrave;nh T&ecirc;n v&agrave; Email</span><br /><span style="font-size: 12pt;">git config --global user.name "T&ecirc;n của bạn"</span><br /><span style="font-size: 12pt;">git config --global user.email "Email của bạn"</span><br /><span style="font-size: 12pt;">Kiểm tra lại config xem đ&atilde; đ&uacute;ng chưa</span><br /><span style="font-size: 12pt;">git config --list</span><br /><span style="font-size: 12pt;">---------------------------------------------------</span><br /><span style="font-size: 12pt;">x&oacute;a nh&aacute;nh :</span><br /><span style="font-size: 12pt;">git branch -d &lt;t&ecirc;n nh&aacute;nh&gt;</span><br /><span style="font-size: 12pt;">git branch -D &lt;t&ecirc;n nh&aacute;nh&gt; : quyết định x&oacute;a bất chấp th&igrave; d&ugrave;ng "-D"</span><br /><span style="font-size: 12pt;">-------------------------------------------------</span><br /><span style="font-size: 12pt;">- sửa commit bị nhầm:</span><br /><span style="font-size: 12pt;"> &nbsp;&nbsp;&nbsp;+ git commit --amend </span><br /><span style="font-size: 12pt;">- Undo lại commit:</span><br /><span style="font-size: 12pt;"> &nbsp;&nbsp;&nbsp;+ Undo lại 1 file : git checkout -- [dường dẫn + t&ecirc;n file]</span><br /><span style="font-size: 12pt;"> &nbsp;&nbsp;&nbsp;+ undo 1 commit m&agrave; muốn giữ lại những thứ đ&atilde; thay đổi :</span><br /><span style="font-size: 12pt;"> - git reset --soft HEAD~1</span><br /><span style="font-size: 12pt;"> &nbsp;&nbsp;&nbsp;+ undo 1 commit m&agrave; kh&ocirc;ng muốn giữ lại những thứ đ&atilde; thay đổi :</span><br /><span style="font-size: 12pt;"> - git reset --hard HEAD~1</span></p>
<p><span style="font-size: 12pt;">- git clean : git clean --force</span><br /><span style="font-size: 12pt;">- Git clone th&ocirc;ng qua SSH</span><br /><span style="font-size: 12pt;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ssh-keygen -t rsa</span><br /><span style="font-size: 12pt;">-------------------------------------------------------</span><br /><span style="font-size: 12pt;">-Lưu lại trạng th&aacute;i hiện tại của branch :</span><br /><span style="font-size: 12pt;"> &nbsp;&nbsp;&nbsp;$ git stash save</span><br /><span style="font-size: 12pt;">-Lưu lại to&agrave;n bộ trạng th&aacute;i hiện tại của branch :</span><br /><span style="font-size: 12pt;">Mỗi lần lưu sẽ tạo th&agrave;nh 1 version tại thời điểm đ&oacute;</span><br /><span style="font-size: 12pt;">Xem lại danh s&aacute;ch đ&atilde; lưu :</span><br /><span style="font-size: 12pt;"> &nbsp;&nbsp;&nbsp;$ git stash list</span><br /><span style="font-size: 12pt;">-Nếu muốn xem cả nội dung của từng thay đổi th&igrave; th&ecirc;m option -p</span><br /><span style="font-size: 12pt;">&nbsp; &nbsp; $ git stash list -p</span><br /><span style="font-size: 12pt;">-hoặc xem nội dung cụ thể hơn nữa của lần thay đổi thứ 1:</span><br /><span style="font-size: 12pt;">&nbsp; &nbsp; $ git stash show stash@{1}</span><br /><span style="font-size: 12pt;">-Lấy lại thay đổi:</span><br /><span style="font-size: 12pt;">&nbsp; &nbsp; $ git stash apply stash@{1}</span><br /><span style="font-size: 12pt;">-X&oacute;a:</span><br /><span style="font-size: 12pt;">&nbsp; &nbsp; $ git stash drop</span></p>
<p><span style="font-size: 12pt;">-Cherry-pick d&ugrave;ng để lấy commit từ nh&aacute;nh n&agrave;y sang nh&aacute;nh kh&aacute;c:</span></p>
<p><span style="font-size: 12pt;">&nbsp; &nbsp;$ git cherry-pick [ID-commit]</span></p>
<p><span style="color: #ff0000; font-family: 'comic sans ms', sans-serif;"><strong><span style="font-size: 14pt;">C&aacute;ch xử l&yacute; c&aacute;c lỗi thường gặp trong git</span></strong></span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Đầu ti&ecirc;n muốn sửa được lỗi trong git ta phải thực hiện tạo ra n&oacute; trước đ&atilde;. Phần 1 sẽ n&oacute;i 1 số lệnh cơ bản trong git theo follow tạo v&agrave; sử dụng 1 project.</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">- git tr&ecirc;n m&aacute;y scm l&agrave; git local&nbsp;</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">- github,gitlab&nbsp; l&agrave; git remote</span></p>
<p><span style="color: #ff0000; font-family: 'comic sans ms', sans-serif;"><strong><span style="font-size: 14pt;">C&aacute;c lệnh cơ bản</span></strong></span></p>
<p><br /><span style="font-family: 'comic sans ms', sans-serif;"><strong><span style="font-size: 14pt;">1. Khởi tạo git</span></strong></span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"># Chắc ai cũng biết rồi muốn khởi tạo 1 repo ta d&ugrave;ng lệnh</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">&nbsp;<span style="color: #ff0000;">&nbsp; &nbsp;git init</span></span></p>
<p><span style="font-family: 'comic sans ms', sans-serif;"><strong><span style="font-size: 14pt;">2. Th&ecirc;m mới remote v&agrave;o project</span></strong></span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"># hiển thị danh s&aacute;ch remote trong git của project </span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"><span style="color: #ff0000;">&nbsp; &nbsp; git remote -v</span></span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"># Th&ecirc;m mới một remote v&agrave;o git</span><br /><span style="font-size: 12pt; color: #ff0000; font-family: 'comic sans ms', sans-serif;">&nbsp; &nbsp; git remote add origin &lt;url&gt;</span><br /><span style="font-family: 'comic sans ms', sans-serif;"><strong><span style="font-size: 14pt;">3. Clone project</span></strong></span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Bạn ph&aacute;t hiện ra l&agrave; bạn đ&atilde; c&oacute; url của project sẵn rồi th&igrave; tội g&igrave; phải khởi tạo git mới nữa. Thay v&agrave;o đ&oacute; h&atilde;y d&ugrave;ng clone</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp; git clone</span><br /><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;"><strong>4. L&agrave;m việc c&ugrave;ng branch</strong></span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"><strong><span style="color: #ff0000;">Git</span> </strong>l&agrave; một hệ thống quản l&yacute; phi&ecirc;n bản ph&acirc;n t&aacute;n, v&igrave; thế m&ocirc; h&igrave;nh của n&oacute; giống như một c&aacute;i c&acirc;y. Vậy bạn c&oacute; thể nhận ra lu&ocirc;n l&agrave; mỗi c&aacute;i c&acirc;y lu&ocirc;n c&oacute; một th&acirc;n c&acirc;y ch&iacute;nh, v&agrave; c&aacute;c c&agrave;nh, nh&aacute;nh nhỏ. Tương tự trong git ta c&oacute; branch thể hiện mỗi nh&aacute;nh nhỏ của một c&aacute;i c&acirc;y v&agrave; nh&aacute;nh ch&iacute;nh tương đương với th&acirc;n c&acirc;y thường được gọi l&agrave; master. Nếu từng l&agrave;m việc thực tế trong c&aacute;c dự &aacute;n bạn thường thấy nh&aacute;nh master sẽ l&agrave; nh&aacute;nh rỗng, thay v&agrave;o đ&oacute; những developer sử dụng c&aacute;c nh&aacute;nh c&oacute; t&ecirc;n như development, product, test,.... Điều n&agrave;y gi&uacute;p cho c&aacute;c lập tr&igrave;nh vi&ecirc;n ph&acirc;n biện v&agrave; thao t&aacute;c tr&ecirc;n những m&ocirc;i trường tương ứng quan qu&aacute; tr&igrave;nh ph&aacute;t triển phần mềm một c&aacute;ch dễ d&agrave;ng v&agrave; minh bạch hơn.</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"><img class="" style="width: 30%; height: auto;text-aligin:center" src="https://images.viblo.asia/3b171116-23fb-4bd2-a8ac-65b63fe65372.png" alt="" width="600" height="779" /></span><br /><span style="font-size: 12pt; color: #ff0000; font-family: 'comic sans ms', sans-serif;">Một số lệnh cơ bản</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Danh s&aacute;ch branch</span><br /><span style="font-size: 12pt; color: #ff0000; font-family: 'comic sans ms', sans-serif;">&nbsp; &nbsp;git branch</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"># tạo mới branch</span><br /><span style="font-size: 12pt; color: #ff0000; font-family: 'comic sans ms', sans-serif;">&nbsp; &nbsp;git branch (&lt;name&gt;)</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"># Di chuyển từ branch hiện tại đến một branch kh&aacute;c bằng t&ecirc;n branch đ&oacute;</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git checkout &lt;name&gt;</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"># Tạo v&agrave; di chuyển từ branch hiện tại đến một branch mới</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git checkout -b &lt;name&gt;</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> ```markdown</span></p>
<p><span style="font-size: 14pt;"><strong><span style="font-family: 'comic sans ms', sans-serif;">**5. Hợp nhất branch**</span></strong></span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> - Đ&acirc;y l&agrave; một trong những c&acirc;u lệnh cơ bản thường d&ugrave;ng của quy tr&igrave;nh. Nhưng với việc c&aacute;c tool hỗ trợ như github, gitlab,... th&igrave; việc sử dụng c&acirc;u lệnh n&agrave;y chỉ c&ograve;n nằm ở dưới local m&agrave; th&ocirc;i.</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">``` shell</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> - để hợp nhất nh&aacute;nh branch-name v&agrave;o nh&aacute;nh master</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git merge &lt;branch-name&gt;</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">6. Cập nhật code mới nhất về</span></strong></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Khi l&agrave;m việc một m&igrave;nh thực tế bạn sẽ kh&ocirc;ng cần đến git nhưng khi l&agrave;m việc nh&oacute;m v&agrave; muốn lấy code mới nhất từ một nh&aacute;nh n&agrave;o đ&oacute; tr&ecirc;n repo online về th&igrave; bạn sẽ d&ugrave;ng lệnh sau:</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git pull origin &lt;branch&gt;</span><br /><span style="font-size: 14pt;"><strong><span style="font-family: 'comic sans ms', sans-serif;">7. xem status v&agrave; một v&agrave;i thứ nữa</span></strong></span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git status</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git diff &ndash;-stat</span><br /><span style="font-size: 14pt;"><strong><span style="font-family: 'comic sans ms', sans-serif;">Những sự cố thường gặp trong Git</span></strong></span><br /><span style="font-size: 14pt;"><strong><span style="font-family: 'comic sans ms', sans-serif;">1. Viết sai message commit</span></strong></span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Để thay đổi nộ dung commit, th&ecirc;m, sửa file v&agrave;o commit rất đơn giản bạn chỉ cần sử dụng</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git commit --amend</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">2. Đặt sai t&ecirc;n branch</span></strong><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Việc g&otilde; nhầm hay thiết th&agrave;nh phần theo convention khi đặt t&ecirc;n branch l&agrave; kh&ocirc;ng hiếm. L&uacute;c mới tiếp cận bạn thường lựa chọn giải ph&aacute;p l&agrave; tạo một branch mới. C&oacute; một c&aacute;ch nhanh hơn rất nhiều giống như rename trong c&aacute;c phần l&agrave;m việc với file đ&oacute; l&agrave; d&ugrave;ng c&acirc;u lệnh:</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git branch -m &lt;t&ecirc;n branch sau khi đổi&gt;</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">3. Commit chơi chơi v&agrave; giờ muốn n&oacute; bay m&agrave;u</span></strong><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Việc l&agrave;m ngốc ngếch n&agrave;y diễn ra thường xuy&ecirc;n trong qu&aacute; tr&igrave;nh l&agrave;m việc, vậy l&agrave;m thế n&agrave;o để code dữ nguy&ecirc;n v&agrave; x&oacute;a commit đ&oacute; đi, đầu ti&ecirc;n bạn phải t&igrave;m hiểu một số l&yacute; thuyết sau:</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">Note: HEAD, Working tree, Index trong git l&agrave; g&igrave;?</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"><span style="color: #ff0000;">Git</span> giữ một con trỏ đặc biệt c&oacute; t&ecirc;n HEAD. Trong Git, đ&acirc;y l&agrave; một con trỏ tới nh&aacute;nh nội bộ m&agrave; bạn đang l&agrave;m việc</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Tr&ecirc;n Git, những thư mục được đặt trong sự quản l&yacute; của Git m&agrave; mọi người đang thực hiện c&ocirc;ng việc trong thực tế được gọi l&agrave; working tree.</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Giữa repository v&agrave; working tree tồn tại một nơi gọi l&agrave; index. Index l&agrave; nơi để chuẩn bị cho việc commit l&ecirc;n repository</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">C&aacute;ch 1: Sử dụng reset (khi chưa c&oacute; ai pull về)</span></strong><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git reset HEAD~</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Di chuyển HEAD về vị tr&iacute; commit reset v&agrave; vẫn giữ nguy&ecirc;n tất cả c&aacute;c thay đổi của file, nhưng loại bỏ c&aacute;c thay đổi khỏi stage (Đưa HEAD v&agrave; index về như cũ)</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git reset {commit_id}</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git reset --hard HEAD~</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Di chuyển con trỏ HEAD về vị tr&iacute; commit reset v&agrave; loại bỏ tất cả sự thay đổi của file sau thời điểm commit reset</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">HEAD~ c&oacute; &yacute; nghĩa giống với HEAD^ hay @^, nghĩa l&agrave; quay về trước 1 commit</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Muốn quay về trước n commit, </span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"><span style="color: #ff0000;">VD 5 commit th&igrave; c&oacute; thể thay bằng HEAD~5.</span></span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">--hard c&oacute; nghĩa l&agrave; bỏ commit đi v&agrave; bỏ cả những thay đổi chưa được commit trong working space. Khi n&agrave;y m&ocirc;i trường sẽ ho&agrave;n to&agrave;n "sạch sẽ" như thời điểm trước khi commit</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git reset --soft HEAD~</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Lệnh n&agrave;y chỉ di chuyển HEAD về vị tr&iacute; commit reset. Trạng th&aacute;i của stage v&agrave; tất cả sự thay đổi của file sẽ được giữ nguy&ecirc;n</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">--soft c&oacute; nghĩa l&agrave; bỏ commit đi nhưng giữ nguy&ecirc;n những thay đổi chưa được commit trong working space.</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">--soft hữu dụng khi bạn muốn giữ lại những thay đổi chưa commit cho lần commit tiếp theo</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">C&aacute;ch 2: Sử dụng revert (người kh&aacute;c đ&atilde; pull về)</span></strong><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # commit_hash l&agrave; m&atilde; commit</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git revert &lt;commit_hash&gt;</span><br /><span style="font-size: 14pt;"><strong><span style="font-family: 'comic sans ms', sans-serif;">C&aacute;ch 3: Sử dụng --amend</span></strong></span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git commit --amend</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Bạn c&oacute; thể sử dụng lệnh n&agrave;y để viết lại commit message</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Option --no-edit sử dụng khi bạn chỉ muốn th&ecirc;m file m&agrave; kh&ocirc;ng muốn sửa commit message</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git commit --amend --no-edit</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">4. Khi lỡ tay commit nhầm sang một branch kh&aacute;c</span></strong><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">C&oacute; những l&uacute;c ta sơ suất lỡ tay commit thẳng v&agrave;o master trong khi thực ra l&agrave; muốn commit v&agrave;o một branch kh&aacute;c</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> #Đầu ti&ecirc;n l&agrave; tạo một branch kh&aacute;c chứa trạng th&aacute;i m&agrave; ta đ&atilde; commit</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git branch other-branch</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> #Đưa HEAD, index của master về 1 commit trước đ&oacute;</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git reset --hard HEAD~</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> #Check out sang branch c&oacute; commit trước đ&oacute;</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git checkout other-branch</span><br /><span style="font-size: 14pt;"><strong><span style="font-family: 'comic sans ms', sans-serif;">5. Gộp nhiều commit th&agrave;nh một commit</span></strong></span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Sử dụng rebase + squash (or fixup) để tổng hợp lại c&aacute;c commit cũ</span></p>
<p><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Squash: giữa nguy&ecirc;n commit message của những commit trước</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Fixup: xo&aacute; commit message của những commit trước</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> Rebase về n commit trước (c&oacute; bao gồm cả HEAD)</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # (V&iacute; dụ) git rebase -i HEAD~3</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git rebase -i HEAD~&lt;số lượng commit&gt;</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Sau lệnh n&agrave;y sẽ mở ra editor n&ecirc;n h&atilde;y sửa lại như sau rồi lưu lại</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;"> # Note: Với vim bấm &ldquo;a&rdquo; để bắt đầu edit &rarr; Bấm ECS để dừng thao t&aacute;c edit &rarr; Bấm &ldquo;shift + z + z&rdquo; để save</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # (trước khi sửa) c&aacute;c commit cũ từ tr&ecirc;n xuống dưới</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> pick aa11bbc commit message 1</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> pick b2c3c4d commit message 2</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> pick 4e56fgh commit message 3</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> ・・・</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # (sau khi sửa) c&aacute;c commit trước l&agrave; squash sẽ được tổng hợp v&agrave;o 1 commit ở đằng trước</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> pick aa11bbc commit message 1</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> squash b2c3c4d commit message 2</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> squash 4e56fgh commit message 3</span><br /><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">6. Chia commit to th&agrave;nh nhiều commit nhỏ</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Đầu ti&ecirc;n l&agrave; đưa HEAD v&agrave; index về 1 commit trước đ&oacute;.</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # N&oacute;i c&aacute;ch kh&aacute;c l&agrave; ta coi như l&agrave; chưa từng c&oacute; commit to đ&ugrave;ng kia v&agrave; chỉ giữ lại trạng th&aacute;i của working tree</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git reset HEAD~</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # D&ugrave;ng lệnh sau đ&acirc;y để th&ecirc;m c&aacute;c phần nhỏ v&agrave;o index</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git add -p</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Khi c&aacute;c phần cần thay đổi đ&atilde; c&oacute; th&igrave; ta commit</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git commit -m "commit message"</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Sau đ&oacute; ta lặp đi lặp lại c&aacute;c bước như tr&ecirc;n cho phần c&ograve;n lại</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">7. Chuyển xang nh&aacute;nh kh&aacute;c khi đang l&agrave;m việc giở</span></strong><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Tạm thời lưu lại c&aacute;c phần c&ocirc;ng việc c&ograve;n đang l&agrave;m dở</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git stash -u</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Chuyển sang một branch kh&aacute;c v&agrave; l&agrave;m việc</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git checkout -b other-branch</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git add &lt;c&aacute;c file cần thiết&gt;</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git commit -m "commit message"</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Trở về branch cũ</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git checkout origin-branch</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Lấy lại c&aacute;c nội dung c&ocirc;ng việc đang l&agrave;m dở trước đ&oacute;</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git stash pop</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">8. Hồi phục commit quan trọng khi lỡ tay x&oacute;a n&oacute; đi</span></strong><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Đ&acirc;y hẳn l&agrave; sự cố khủng khiếp nhất. C&oacute; thể xảy ra khi lỡ tay git reset --hard .Tuy nhi&ecirc;n, commit n&agrave;o cũng c&oacute; thể hồi phục được</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Đầu ti&ecirc;n l&agrave; xem lại to&agrave;n bộ lịch sử commit</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git reflog</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Từ đ&oacute; chọn commit muốn phục hồi v&agrave; kh&ocirc;i phục lại</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;"> # v&iacute; dụ: git reset --hard HEAD@{2}</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git reset --hard &lt;commit&gt;</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">9. Kh&ocirc;i phục branch đ&atilde; x&oacute;a</span></strong><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Đầu ti&ecirc;n l&agrave; xem lại to&agrave;n bộ lịch sử commit</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git reflog</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Từ c&aacute;c commit n&agrave;y, chọn rồi tạo branch mới</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # v&iacute; dụ: git branch new-branch HEAD@{2}</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git branch &lt;t&ecirc;n branch&gt; &lt;commit_id&gt;</span><br /><span style="font-size: 14pt;"><strong><span style="font-family: 'comic sans ms', sans-serif;">10. Kh&ocirc;i phục về trạng th&aacute;i trước khi merge</span></strong></span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Note: Chỉ cho trường hợp m&agrave; người kh&aacute;c vẫn chưa pull code về</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git reset --hard ORIG_HEAD</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Commit trước khi reset được tham chiếu bằng ORIG_HEAD</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">11. Kh&ocirc;i phục về trạng th&aacute;i trước khi pull từ remote</span></strong><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Sau khi pull code về cập nhật nhưng thấy conflict nhiều như n&uacute;i th&igrave; quả l&agrave; muốn trở lại như cũ</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Lấy từ code mới remote</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git pull origin master</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Ph&aacute;t sinh conflict</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;"> # Suy nghĩ lại th&igrave; trong pull(fetch + merge) muốn bỏ phần merge đi: </span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;$ git reset --hard ORIG_HEAD</span><br /><span style="font-size: 14pt;"><strong><span style="font-family: 'comic sans ms', sans-serif;">12. Khi bạn muốn rename 1 nh&aacute;nh cả ở local v&agrave; tr&ecirc;n remote (github)</span></strong></span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git branch -m new-name</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git push remote-name :old-name new-name</span><br /><strong><span style="font-size: 14pt; font-family: 'comic sans ms', sans-serif;">13. Khi bạn muốn xo&aacute; 1 branch tr&ecirc;n remote từ xa</span></strong><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif; color: #ff0000;">&nbsp; &nbsp;git push origin --delete remote-branch-name</span><br /><span style="font-size: 12pt; font-family: 'comic sans ms', sans-serif;">Đ&oacute; l&agrave; c&aacute;c thao t&aacute;c cơ bản v&agrave; c&aacute;ch sửa một số lỗi thường gặp khi l&agrave;m việc với git của m&igrave;nh. </span></p>
:ET